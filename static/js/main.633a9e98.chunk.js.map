{"version":3,"sources":["sounds/Hypnotic Clock Sound.m4a","App.js","index.js"],"names":["module","exports","App","array","length","Array","from","v","k","state","year","month","monthDays","day","week","hour","Minute","second","playing","setInterval","time","Date","setState","getFullYear","getMonth","getDate","getDay","getHours","getMinutes","getSeconds","audioEl","document","getElementsByClassName","text","isPlaying","currentTime","paused","ended","readyState","play","volume","innerHTML","pause","className","onClick","this","playAudio","src","soundFile","map","x","index","key","style","transform","Component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.633a9e98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Hypnotic Clock Sound.52d08540.m4a\";","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport soundFile from \"./sounds/Hypnotic Clock Sound.m4a\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      year: 0,\n      month: 0,\n      monthDays: 0,\n      day: 0,\n      week: 0,\n      hour: 0,\n      Minute: 0,\n      second: 0,\n      playing: false\n    };\n  }\n\n  componentDidMount() {\n    setInterval(() => {\n      let time = new Date();\n\n      this.setState({\n        year: time.getFullYear(),\n        month: time.getMonth() + 1,\n        monthDays: new Date(this.state.year, this.state.month, 0).getDate(),\n        day: time.getDate(),\n        week: time.getDay(),\n        hour: time.getHours(),\n        Minute: time.getMinutes(),\n        second: time.getSeconds(),\n        playing: false\n      });\n    }, 1000);\n  }\n\n  // array = length =>\n  //   Array.from({ length })\n  //     .map((v, k) => k)\n  //     .map(x => x + 1);\n\n  array = length => Array.from({ length }, (v, k) => k + 1);\n\n  playAudio() {\n    const audioEl = document.getElementsByClassName(\"audio-element\")[0];\n    const text = document.getElementsByClassName(\"text\")[0];\n    let isPlaying =\n      audioEl.currentTime > 0 &&\n      !audioEl.paused &&\n      !audioEl.ended &&\n      audioEl.readyState > 2;\n    if (audioEl.paused) {\n      audioEl.play();\n      audioEl.volume = 0.3;\n      text.innerHTML = \"tick\";\n    } else {\n      audioEl.pause();\n      text.innerHTML = \"no tick\";\n    }\n\n    if (!isPlaying) {\n      audioEl.play();\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <button className=\"tick\" onClick={this.playAudio}>\n          <span className=\"text\">tick</span>\n        </button>\n\n        <audio className=\"audio-element\">\n          <source src={soundFile}></source>\n        </audio>\n        <header className=\"App-header\">\n          <div className=\"msg\">\n            <div className=\"year\">\n              <span>{this.state.year}</span>\n            </div>\n          </div>\n\n          <div className=\"box\">\n            {this.array(12).map((x, index) => {\n              const theMonth = [\n                \"Jan\",\n                \"Feb\",\n                \"Mar\",\n                \"Apr\",\n                \"May\",\n                \"Jun\",\n                \"Jul\",\n                \"Aug\",\n                \"Spt\",\n                \"Oct\",\n                \"Nov\",\n                \"Dec\"\n              ];\n              return (\n                <div\n                  key={index}\n                  className={`month item ${\n                    index === this.state.month - 1 ? \"active\" : \"\"\n                  }`}\n                  style={{\n                    transform: `rotate(${index * 31 -\n                      31 * (this.state.month - 1)}deg)`\n                  }}\n                >\n                  {`${theMonth[x - 1]}`}\n                </div>\n              );\n            })}\n\n            {this.array(this.state.monthDays).map((x, index) => {\n              return (\n                <div\n                  key={index}\n                  className={`day item ${\n                    index === this.state.day - 1 ? \"active\" : \"\"\n                  }`}\n                  style={{\n                    transform: `rotate(${index * 11.6 -\n                      11.6 * (this.state.day - 1)}deg)`\n                  }}\n                >\n                  {`${x}.`}\n                </div>\n              );\n            })}\n\n            {this.array(7).map((x, index) => {\n              const dayName = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n\n              return (\n                <div\n                  key={index}\n                  className={`week item ${\n                    index === this.state.week - 1 ? \"active\" : \"\"\n                  }`}\n                  style={{\n                    transform: `rotate(${index * (180 / 7) -\n                      (180 / 7) * (this.state.week - 1)}deg)`\n                  }}\n                >\n                  {` ${dayName[x - 1]}`}\n                </div>\n              );\n            })}\n\n            {this.array(24).map((x, index) => {\n              return (\n                <div\n                  key={index}\n                  className={`hour item ${\n                    index === this.state.hour - 1 ? \"active\" : \"\"\n                  }`}\n                  style={{\n                    transform: `rotate(${index * (360 / 24) -\n                      (360 / 24) * (this.state.hour - 1)}deg)`\n                  }}\n                >\n                  {`${x} hr`}\n                </div>\n              );\n            })}\n\n            {this.array(60).map((x, index) => {\n              return (\n                <div\n                  key={index}\n                  className={`Minute item ${\n                    index === this.state.Minute - 1 ? \"active\" : \"\"\n                  }`}\n                  style={{\n                    transform: `rotate(${index * (360 / 60) -\n                      (360 / 60) * (this.state.Minute - 1)}deg)`\n                  }}\n                >\n                  {`${x} min`}\n                </div>\n              );\n            })}\n\n            {this.array(60).map((x, index) => {\n              return (\n                <div\n                  key={index}\n                  className={`second item ${\n                    index === this.state.second - 1 ? \"active\" : \"\"\n                  }`}\n                  style={{\n                    transform: `rotate(${index * (360 / 60) -\n                      (360 / 60) * (this.state.second - 1)}deg)`\n                  }}\n                >\n                  {`${x}s`}\n                </div>\n              );\n            })}\n          </div>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}